# ==========================================================
#= PARAMETRI APPLICAZIONE
# ==========================================================
spring.application.name=visite-mediche

# Settare la porta del server Tomcat: 8081 perche' nella 8080 e' gia sempre attivo il mio Tomcat in locale
server.port=8081

# ==========================================================
#= PARAMETRI DBMS POSTGRESQL
# ==========================================================
spring.sql.init.mode=always
spring.sql.init.platform=postges

# Username, password, URL (indirizzo del server dove gira Postgresql, porta e nome del database)
spring.datasource.username=postgres
spring.datasource.password=mmsf22dp
spring.datasource.url=jdbc:postgresql://localhost:5432/visite_mediche

# Decido se o meno la web app deve costruirmi le tabelle del DB (non proprio consigliatissimo).
# (mettere spring.jpa.hibernate.ddl-auto=create mi serve se voglio creare la webapp prima di crearmi il DB,
# sulla base di come sono fatte le classi di entita')
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true


# ==========================================================
#= PARAMETRI THYMELEAF
# ==========================================================

# Prefisso: specifico la cartella /templates/, in cui saranno presente i miei file thymeleaf. Suffisso.
# Modalita' html. Se o meno i file saranno cachati
#
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false